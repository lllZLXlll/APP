package com.pjzb.service.admin.borrow;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import com.pjzb.controller.common.BaseController;
import com.pjzb.controller.common.PageBean;
import com.pjzb.dao.BorrowDao;
import com.pjzb.entity.BorrowAmountType;
import com.pjzb.util.Constants;

/**
 * 标种类型
 */

@Service
public class AdminBorrowTypeService extends BaseController {

	@Autowired
	private BorrowDao borrowDao;

	public String queryShoveTypeAllInit(Model model, long pageNum, long pageSize, String tabid) {
		try {
			List<Integer> status = new ArrayList<Integer>();
			List<Map<String, Object>> list = borrowDao.queryBorrowTypelist((pageNum - 1) * pageSize, pageSize);
			long count = borrowDao.queryBorrowTypeCount();
			for (Map<String, Object> map : list) {
				int i = 0;
				String stytyles = map.get("styles") == null ? "" : map.get("styles") + "";
				if (stytyles.length() > 0) {
					String[] array = stytyles.split(", ");
					for (int n = 0; n <= array.length - 1; n++) {
						int a = Integer.valueOf(array[n]);
						status.add(a);
					}
					List<Map<String, Object>> titleList = borrowDao.queryBorrowAmountByIds(status);
					if (titleList != null) {
						StringBuffer buf = new StringBuffer();
						for (Map<String, Object> titleMap : titleList) {
							buf.append(titleMap.get("title") + "");
							i++;
							if (i != titleList.size()) {
								buf.append("|");
							}
						}
						map.put("titles", buf.toString());
					}
				}
			}
			List<Map<String, Object>> mapTypeList = borrowDao.queryBorrowAmountAll();
			model.addAttribute("pageBean", new PageBean(pageNum, pageSize, count, list));
			model.addAttribute("tabid", tabid);
			model.addAttribute("mapTypeList", mapTypeList);
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
			log.info("*********************分页查询标种类型异常**************************");
		}
		return "/admin/borrow/borrowtype/list.jsp";
	}

	public String queryBorrowAmountInit(Model model, Long pageNum, Long pageSize, String tabid) {
		try {
			pageNum = pageNum == null ? 1 : pageNum;
			pageSize = pageSize == null ? Constants.PAGE_SIZE_20 : pageSize;
			List<Map<String, Object>> list = borrowDao.queryBorrowAmountInit((pageNum - 1) * pageSize, pageSize);
			long count = borrowDao.queryBorrowAmountCount();
			PageBean pageBean = new PageBean();
			pageBean.setPageNum(pageNum);
			pageBean.setPageSize(pageSize);
			pageBean.setTotalNum(count);
			pageBean.setPage(list);
			model.addAttribute("pageBean", pageBean);
			model.addAttribute("tabid", tabid);
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
			log.info("*********************分页查询借款额度异常**************************");
		}
		return "/admin/borrow/borrowquota/list.jsp";
	}

	public String updatgeBorrowAmountInit(Model model, Long id, String tabid) {
		try {
			Map<String, Object> map = borrowDao.queryBorrowAmountById(id);
			model.addAttribute("paramMap", map);
			model.addAttribute("tabid", tabid);
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
			log.info("*********************查询借款额度异常**************************");
		}
		return "/admin/borrow/borrowquota/edit.jsp";
	}

	public Map<String, Object> updatgeBorrowAmount(BorrowAmountType borrowAmountType, String tabid) {
		long count = borrowDao.updatgeBorrowAmount(borrowAmountType);
		if (count > 0) {
			return ajaxDoneInfo("200", "借款额度修改成功", "dialog", tabid);
		}
		return ajaxDoneInfo("300", "借款额度修改失败", "", "");
	}

}
