package com.pjzb.interceptor;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.pjzb.controller.common.BaseController;
import com.pjzb.entity.Admin;
import com.pjzb.util.Constants;
import com.pjzb.util.IConstants;

public class AdminLoginInterceptor extends BaseController implements HandlerInterceptor {
	public static Log log = LogFactory.getLog(AdminLoginInterceptor.class);

	private List<String> uncheckUrls;

	public List<String> getUncheckUrls() {
		return uncheckUrls;
	}

	public void setUncheckUrls(List<String> uncheckUrls) {
		this.uncheckUrls = uncheckUrls;
	}

	public void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception arg3) throws Exception {
	}

	public void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3) throws Exception {
	}

	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object arg2) throws Exception {
		log.info("============URL=============" + request.getRequestURL());
		log.info("============IP==============" + getRemortIp());
		String requestURI = request.getRequestURI().trim();
		Admin admin = (Admin) sessionGetAttribute(Constants.SESSION_ADMIN);
		if (IConstants.ISDEMO.equals("1")) {
			requestURI = requestURI.substring(requestURI.indexOf("/pjzb") + 5, requestURI.length());
		}
		log.info("============URI=============" + requestURI);
		if (!uncheckUrls.contains(requestURI)) {
			if (admin != null) {
				Map<Long, String> applicationAdminMap = (Map<Long, String>) applicationGetAttribute(Constants.APPLICATION_ADMIN);
				String sessionId = request.getSession().getId();
				if (applicationAdminMap != null) {
					if (applicationAdminMap.size() > 0) {
						sessionId = applicationAdminMap.get(admin.getId());
					}
				}
				if (request.getSession().getId().equals(sessionId)) {
					return true;
				} else {
					sessionRemoveAttribute(Constants.SESSION_ADMIN);
					request.setAttribute("msg", "您的账号在异地登录，您已被迫下线...");
					request.getRequestDispatcher("/WEB-INF/pages/admin/login/login.jsp").forward(request, response);
					return false;
				}
			} else {
				request.getRequestDispatcher("/WEB-INF/pages/admin/login/login.jsp").forward(request, response);
				return false;
			}
		} else {
			if (!requestURI.equals("/admin/login.do") && !requestURI.equals("/admin/viewAuthFadada.do")) {
				// 如果管理员已经登录，则直接进入后台管理系统
				if (admin != null) {
					response.sendRedirect("adminInit.do");
				}
			}
			return true;
		}
	}

}
