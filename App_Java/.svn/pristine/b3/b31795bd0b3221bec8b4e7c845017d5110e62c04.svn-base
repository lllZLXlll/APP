package com.pjzb.controller.app;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import net.sf.json.JSONObject;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.pjzb.controller.common.BaseController;
import com.pjzb.dao.BorrowDao;
import com.pjzb.entity.User;
import com.pjzb.service.common.AccountSettingsService;
import com.pjzb.service.common.UserService;
import com.pjzb.util.AppUtil;
import com.pjzb.util.Constants;
import com.pjzb.util.ConvertUtil;
import com.pjzb.util.IConstants;

@Controller
@RequestMapping(value = "/reactapp")
public class AppAccountSettingsController extends BaseController {
	public static Log log = LogFactory.getLog(AppAccountSettingsController.class);

	@Autowired
	private AccountSettingsService accountSettingsService;

	@Autowired
	private BorrowDao borrowDao;
	
	@Autowired
	private UserService userService;

	/**
	 * 我的银行卡
	 * 
	 * @return
	 * @throws IOException
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryBankList")
	@ResponseBody
	public Map<String, Object> queryBankList() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			Long userId = ConvertUtil.convertLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			jsonMap = accountSettingsService.queryBankLists(userId);
		} catch (Exception e) {
			log.error(e);
			e.printStackTrace();
			jsonMap.put("msg", "5");
			jsonMap.put("msg", "查询银行卡异常");
		}
		return jsonMap;
	}

	/**
	 * 添加银行卡
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addBankInfo")
	@ResponseBody
	public Map<String, Object> addBankInfo() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			Long uid = ConvertUtil.convertLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			jsonMap.putAll(accountSettingsService.addBankInfo(jsonObject,uid,getBasePath(),chosese()));
		} catch (Exception e) {
			jsonMap.put("error", "2");
			jsonMap.put("msg", "添加银行卡异常，"+Constants.CUSTOMER_MSG);
			log.error(e);
			e.printStackTrace();
		}
		return jsonMap;
	}

	/**
	 * APP上传头像
	 */
	@RequestMapping(value = "/appUploadHead")
	@ResponseBody
	public Map<String, Object> appUploadHead() throws Exception {

		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			Long userId = Long.parseLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			log.info(request().getRequestURL());
			String url = request().getRequestURL().toString();

			jsonMap.putAll(accountSettingsService.checkAppUploadHead(jsonObject, userId, url, Constants.REACTAPP));
		} catch (Exception e) {
			jsonMap.put("error", "2");
			jsonMap.put("msg", "APP上传头像异常");
			log.error(e);
			e.printStackTrace();
		}
		return jsonMap;
	}

	/**
	 * 消息中心
	 * 
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/querySysMails2")
	@ResponseBody
	public Map<String, Object> querySysMails2() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			if (jsonObject == null) {
				jsonMap.put("error", "404");
				jsonMap.put("msg", "非法请求");
				return jsonMap;
			}
			Long userId = Long.parseLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			jsonMap = accountSettingsService.queryReceiveMails(jsonObject, userId, IConstants.MALL_TYPE_SYS, "sys",
					IConstants.PAGE_SIZE_10, IConstants.MAIL_SYS_, Constants.REACTAPP);
		} catch (Exception e) {
			log.error(e);
			e.printStackTrace();
			jsonMap.put("error", "-1");
			jsonMap.put("msg", "查询异常");
		}
		return jsonMap;
	}

	/**
	 * 查询邮件内容2
	 */
	@RequestMapping(value = "/queryMessageById")
	@ResponseBody
	public Map<String, Object> queryMessageById() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		JSONObject jsonObject = requestAppJSONGetAttribute();
		if (jsonObject == null) {
			jsonMap.put("error", "404");
			jsonMap.put("msg", "非法请求");
			return jsonMap;
		}
		String mailIdStr = jsonObject.getString("mailId");
		Long mailId = 0l;
		if (mailIdStr != null && !mailIdStr.equals("")) {
			mailId = Long.parseLong(mailIdStr);
		}
		int type = Integer.parseInt(jsonObject.getString("type"));

		try {
			Long userId = Long.parseLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			User user = userService.queryUserById(userId);
			jsonMap = accountSettingsService.updateEmailById(user, mailId, type);
		} catch (Exception e) {
			log.error(e);
			jsonMap.put("error", "-1");
			jsonMap.put("msg", "查询异常");
			e.printStackTrace();
		}
		return jsonMap;
	}

}
