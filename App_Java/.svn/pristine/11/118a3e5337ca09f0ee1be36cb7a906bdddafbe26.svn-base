package com.pjzb.controller.front;

import java.util.HashMap;
import java.util.Map;

import net.sf.json.JSONObject;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.pjzb.controller.common.BaseController;
import com.pjzb.service.front.MyManageService;
import com.pjzb.util.Constants;

/**
 * 借款管理、投资管理
 * 
 * @author xiaojin
 * 
 */
@Controller
@RequestMapping(value = "/front")
public class FrontMyManageController extends BaseController {
	public static Log log = LogFactory.getLog(FrontMyManageController.class);

	@Autowired
	private MyManageService myManageService;

	/**
	 * 投资管理
	 * 
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/investmentManage")
	@ResponseBody
	public Map<String, Object> investmentManage() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.queryInvestManage(jsonObject, getSessionUserId(), chosese(), Constants.PAGE_SIZE_10));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "投资管理查询异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 收款明细
	 * 
	 * @return
	 */
	@RequestMapping(value = "/getMoneyDetail")
	@ResponseBody
	public Map<String, Object> getMoneyDetail() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.getMoneyDetail(jsonObject, getSessionUserId(), Constants.PAGE_SIZE_10, chosese()));
		} catch (Exception e) {
			log.error(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", " 收款明细查询异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 借款管理
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/borrowManageList")
	@ResponseBody
	public Map<String, Object> borrowManageList() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.queryborrowManage(jsonObject, getSessionUserId(), Constants.PAGE_SIZE_10, chosese()));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "借款管理查询异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 借款管理-》 查看合同
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryPactList")
	@ResponseBody
	public Map<String, Object> queryPactList() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.queryHetongList(jsonObject, 5L));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "协议查看异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 还款明细列表
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/repaymentDetail")
	@ResponseBody
	public Map<String, Object> repaymentDetail() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.queryRepaymentDetail(jsonObject, getSessionUserId(), Constants.PAGE_SIZE_10,chosese()));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "还款明细查询异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 还款明细（明细）
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/findPayingDetailsByBorrowId")
	@ResponseBody
	public Map<String, Object> findPayingDetailsByBorrowId() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.findPayingDetailsByBorrowId(jsonObject,Constants.PAGE_SIZE_5, chosese()));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "还款明细查询异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 还款明细（还款）
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/findMyPayData")
	@ResponseBody
	public Map<String, Object> findMyPayData() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.findMyPayData(jsonObject));
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "还款异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	/**
	 * 验证密码还款
	 * 
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/referPay")
	@ResponseBody
	public Map<String, Object> referPay() {
//		JSONObject obj = new JSONObject();
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			
			jsonMap = myManageService.referPay(jsonObject, getSessionUserId(), getBasePath());
		} catch (Exception e) {
			e.printStackTrace();
			log.info(e);
			e.printStackTrace();
			jsonMap.put("error", "1");
			jsonMap.put("msg", "还款异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}
	
	/**
	 * 自动还款设置
	 * @throws Exception
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/autoRepaymentInit")
	@ResponseBody
	public Map<String, Object> autoRepaymentInit() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			jsonMap.putAll(myManageService.queryAutoRepayment(getSessionUserId()));
			return jsonMap;
		} catch (Exception e) {
			jsonMap.put("error", "1");
			jsonMap.put("msg", "查询自动投标异常");
			log.error(e);
			e.printStackTrace();
			return jsonMap;
		}
	}
	
	/**
	 * 自动还款设置
	 */
	@RequestMapping(value = "/autoRepayment")
	@ResponseBody
	public Map<String, Object> autoRepayment(){
//		JSONObject obj = new JSONObject();
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		JSONObject json = getAjaxParam();
		int state = Integer.parseInt(json.get("state").toString());
		
		long result =-1;
		
		result = myManageService.addAutoRepayment(getSessionUserId(),state);
		
		if(result <=0){
			jsonMap.put("error", "1");
			jsonMap.put("msg", "设置失败，请稍后再试！");
			return jsonMap;
		}
		jsonMap.put("error", "0");
		jsonMap.put("msg", "设置成功！");
		return jsonMap;
	}

	@RequestMapping(value = "/findBorrowForpayDetail")
	@ResponseBody
	public Map<String, Object> findBorrowForpayDetail(){
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "请求参数为空");
				return jsonMap;
			}
			jsonMap.putAll(myManageService.findBorrowForpayDetail(jsonObject, getSessionUserId()));
		} catch (Exception e) {
			jsonMap.put("error", "1");
			jsonMap.put("msg", "查询异常");
			log.error(e);
			e.printStackTrace();
		}
		return jsonMap;
	}
	
}
