<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.pjzb.dao.WithdrawDao">

	<resultMap type="withdraw" id="withdrawResultMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="cellPhone" property="cellPhone"/>
		<result column="acount" property="acount"/>
		<result column="sum" property="sum"/>
		<result column="poundage" property="poundage"/>
		<result column="applyTime" property="applyTime"/>
		<result column="status" property="status"/>
		<result column="bankId" property="bankId"/>
		<result column="userId" property="userId"/>
		<result column="remark" property="remark"/>
		<result column="checkId" property="checkId"/>
		<result column="checkTime" property="checkTime"/>
		<result column="ipAddress" property="ipAddress"/>
		<result column="versoin" property="versoin"/>
		<result column="billcode" property="billcode"/>
		<result column="trxId" property="trxId"/>
	</resultMap>

	<select id="queryWithdrawAmountWithin15Days" resultType="java.util.Map" parameterType="java.lang.Long">
		SELECT ROUND(ifnull(sum(sum)+sum(poundage),0),2) AS sum from t_withdraw where userId=1223566768
		AND applyTime >= date_sub(now() ,interval 15 day) and `status` not in (3,5)
	</select>

	<select id="queryWithdrawByBillCode" resultMap="withdrawResultMap" parameterType="java.lang.String">
		SELECT a.trxId AS trxId from t_withdraw a where a.billcode = #{billcode}
	</select>
	
	<select id="callAmountWithdrawProcedure" statementType="CALLABLE" resultType="java.util.Map" parameterType="java.util.Map">  
	  	 {CALL p_amount_withdraw(
			  	 #{in_uid,jdbcType=BIGINT,mode=IN},
				 #{in_dealpwd,jdbcType=VARCHAR,mode=IN},
				 #{in_money,jdbcType=DOUBLE,mode=IN},
				 #{in_bank_id,jdbcType=VARCHAR,mode=IN},
				 #{in_type,jdbcType=VARCHAR,mode=IN},
				 #{in_ip,jdbcType=VARCHAR,mode=IN},
				 #{in_billcode,jdbcType=VARCHAR,mode=IN},
				 #{in_trxId,jdbcType=VARCHAR,mode=IN},
				 #{in_feeAmt,jdbcType=DOUBLE,mode=IN},
				 #{out_ret,jdbcType=BIGINT,mode=OUT},
				 #{out_desc,jdbcType=VARCHAR,mode=OUT}
			 )
		  }  
	</select>  


	<select id="queryWithdrawListForPage" resultMap="withdrawResultMap">
		SELECT a.id,a.name,a.applyTime,CONCAT('********',right(a.bankId, 4)) bankId,a.sum,a.poundage,a.status from t_withdraw a WHERE a.userId=#{0} 
		<if test="param2!=null and param3!=null">  
			AND a.applyTime &gt;=#{1} AND a.applyTime &lt;=#{2}
		</if>
		ORDER BY a.applyTime DESC LIMIT #{3},#{4}
	</select>

	<select id="queryWithdrawCountByApplyTime" resultType="java.util.Map">
		SELECT COUNT(1) AS withdrawCount FROM t_withdraw a WHERE a.userId=#{0}
		<if test="param2!=null and param3!=null">  
			AND a.applyTime &gt;=#{1} AND a.applyTime &lt;=#{2}
		</if>
	</select>

	<select id="queryWithdrawTrxIdById" resultType="java.lang.String">
		SELECT a.trxId AS trxId FROM t_withdraw a where a.id =#{id}
	</select>

	<select id="callAmountWithdrawCancelProcedure" statementType="CALLABLE" resultType="java.util.Map" parameterType="java.util.Map">  
	  	 {CALL p_amount_withdraw_cancel(
			  	 #{in_uid,jdbcType=BIGINT,mode=IN},
				 #{in_wid,jdbcType=BIGINT,mode=IN},
				 #{in_ip,jdbcType=VARCHAR,mode=IN},
				 #{in_date,jdbcType=TIMESTAMP,mode=IN},
				 #{out_ret,jdbcType=INTEGER,mode=OUT},
				 #{out_desc,jdbcType=VARCHAR,mode=OUT}
			 )
		  }  
	</select>  
	


	
</mapper>





