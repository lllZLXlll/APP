package com.pjzb.controller.front;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.pjzb.controller.common.BaseController;
import com.pjzb.service.front.UserInfoService;
import com.pjzb.util.Constants;

/**
 * 注册、登录、
 * 
 * @author xiaojin
 * 
 */
@Controller
@RequestMapping(value = "/front")
public class FrontUserInfoController extends BaseController {

	public static Log log = LogFactory.getLog(FrontUserInfoController.class);

	@Autowired
	private UserInfoService userInfoService;

	@RequestMapping(value = "/login")
	@ResponseBody
	public Map<String, Object> login() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject appInfoMap = getAjaxParam();
			jsonMap.putAll(userInfoService.checkUserInfo(appInfoMap, chosese()));
			if (String.valueOf(jsonMap.get("error")).equals("0")) {
				sessionSetAttribute(Constants.SESSION_USER, jsonMap.get(Constants.SESSION_USER));
			}
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e);
			jsonMap.put("error", "8");
			jsonMap.put("msg", "登录异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	@RequestMapping(value = "/register")
	@ResponseBody
	public Map<String, Object> register() {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = getAjaxParam();
			if (jsonObject == null) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "非法请求");
				return jsonMap;
			}
			jsonMap.putAll(userInfoService.saveUser(jsonObject, chosese(), getRemortIp()));
		} catch (Exception e) {
			e.printStackTrace();
			jsonMap.put("error", "12");
			jsonMap.put("msg", "注册异常，" + Constants.CUSTOMER_MSG);
		}
		return jsonMap;
	}

	@RequestMapping(value = "/isExistUserName")
	@ResponseBody
	public Map<String, Object> isExistUserName(HttpServletResponse response) {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		Map<String, String> appInfoMap = getAjaxParam();
		if (appInfoMap == null)
			return null;
		String userName = appInfoMap.get("username");
		String userNameMap = userInfoService.findUserByUserName(userName);
		if (userNameMap == null) {
			jsonMap.put("error", "3");
			return jsonMap;
		} else {
			jsonMap.put("error", "0");
			return jsonMap;
		}
	}

}
