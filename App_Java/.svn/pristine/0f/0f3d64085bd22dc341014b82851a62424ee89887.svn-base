package com.pjzb.controller.app;

import java.io.IOException;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.pjzb.controller.common.BaseController;
import com.pjzb.controller.common.PageBean;
import com.pjzb.entity.User;
import com.pjzb.service.SlbaoManageService;
import com.pjzb.service.chinapnr.ChinapnrInterface;
import com.pjzb.service.common.UserService;
import com.pjzb.service.front.AccountSettingsService;
import com.pjzb.util.AppUtil;
import com.pjzb.util.Constants;
import com.pjzb.util.ConvertUtil;
import com.pjzb.util.DateUtil;
import com.pjzb.util.GenerateSequenceNo;
import com.pjzb.util.IConstants;

import net.sf.json.JSONObject;

@Controller
@RequestMapping(value = "/reactapp")
public class AppSlbaoManageController extends BaseController {
	public static Log log = LogFactory.getLog(AppSlbaoManageController.class);

	@Autowired
	private AccountSettingsService accountSettingsService;

	@Autowired
	private UserService userService;

	@Autowired
	private SlbaoManageService slbaoManageService;
	
	/**
	 * 生利宝资金明细（所有、转入、转出、利息收益）
	 * 
	 */
	@RequestMapping(value = "/slbaoDetail")
	@ResponseBody
	public Map<String, Object> slbaoDetail() throws Exception {
		JSONObject jsonObject = requestAppJSONGetAttribute();
		Long userId = ConvertUtil.convertLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
		return slbaoManageService.findBorrowInvestByCondition(jsonObject, Long.valueOf(jsonObject.get("curPage")+""), Long.valueOf(IConstants.PAGE_SIZE_15), userId, Constants.REACTAPP);
	}

	/**
	 * 生利宝交易接口 zlx
	 * 
	 * @throws Exception
	 */
	@RequestMapping(value = "/slbaoTrading")
	@ResponseBody
	public Map<String, Object> slbaoTrading() throws Exception {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			Long userId = ConvertUtil.convertLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			User userMap = userService.queryUserById(userId);
			String html = ChinapnrInterface.slbaoTrading(userMap.getIpayAccount(),
					GenerateSequenceNo.generateSequenceNo(), DateUtil.dateToYMD(new Date()),
					getBasePath() + "WEB-PC/synchronousSLBaoTrading.do", getBasePath() + "asynchronousSLBaoTrading.do",
					userId + "", "reactAPP");
			jsonMap.put("error", "0");
			jsonMap.put("msg", "成功");
			jsonMap.put("html", html);
			return jsonMap;
		} catch (Exception e) {
			log.error(e);
			e.printStackTrace();
			jsonMap.put("error", "-1");
			jsonMap.put("msg", "打开生利宝管理失败");
			return jsonMap;
		}
	}

	/**
	 * 查询生利宝产品信息
	 */
	@RequestMapping(value = "/querShengLiBaoInfo")
	@ResponseBody
	public Map<String, Object> querShengLiBaoInfo() throws Exception {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			JSONObject jsonObject = requestAppJSONGetAttribute();
			Long userId = ConvertUtil.convertLong(AppUtil.checkUserId(String.valueOf(jsonObject.get("uid"))));
			User userMap = userService.queryUserById(userId);
			String ipayAccount = userMap.getIpayAccount();
			if (ipayAccount == null || ipayAccount.trim().length() == 0 || ipayAccount.equals("null")) {
				jsonMap.put("error", "-1");
				jsonMap.put("msg", "您未注册汇付天下");
				return jsonMap;
			}

			JSONObject json = JSONObject.fromObject(ChinapnrInterface.queryShengLiBaoInfo(""));
			// JSONObject slbAccountJsonObject = JSONObject
			// .fromObject(ChinaPnRInterface.queryShengLiBaoAccount(userMap.get("ipayAccount")));
			DecimalFormat df3 = new DecimalFormat("0.000");
			DecimalFormat df2 = new DecimalFormat("0.00");
			jsonMap.put("annuRate", df3.format(Double.parseDouble(String.valueOf(json.get("AnnuRate")))));
			jsonMap.put("prdRate", df3.format(Double.parseDouble(String.valueOf(json.get("PrdRate")))));
			String totalAsset = userMap.getSlbaoTotalAmt() + "";
			String totalProfit = userMap.getSlbaoAccumulatedIncome() + "";
			totalAsset = totalAsset.equals("null") ? "0.00" : totalAsset;
			totalProfit = totalProfit.equals("null") ? "0.00" : totalProfit;
			jsonMap.put("totalAsset", df2.format(Double.parseDouble(totalAsset)));
			jsonMap.put("totalProfit", df2.format(Double.parseDouble(totalProfit)));
			jsonMap.put("error", "0");
			jsonMap.put("msg", "生利宝信息查询成功");
			return jsonMap;
		} catch (Exception e) {
			e.printStackTrace();
			jsonMap.put("error", "2");
			jsonMap.put("msg", "生利宝信息查询异常");
			return jsonMap;
		}
	}

}
