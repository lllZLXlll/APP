package com.pjzb.controller.admin;

import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.pjzb.controller.common.BaseController;
import com.pjzb.entity.Activity;
import com.pjzb.entity.Admin;
import com.pjzb.entity.Banner;
import com.pjzb.entity.Links;
import com.pjzb.entity.Mediareport;
import com.pjzb.entity.Message;
import com.pjzb.entity.News;
import com.pjzb.entity.Yybg;
import com.pjzb.service.admin.declare.AdmIninfoManageService;
import com.pjzb.service.admin.declare.AdminActivityService;
import com.pjzb.service.admin.declare.AdminBannerService;
import com.pjzb.service.admin.declare.AdminFriendLinkService;
import com.pjzb.service.admin.declare.AdminMediaCoverageService;
import com.pjzb.service.admin.declare.AdminOperateReportService;
import com.pjzb.service.admin.declare.AdminWebConsultService;

/**
 * 宣传管理Controller
 * 
 * 
 */
@Controller
@RequestMapping(value = "/admin")
public class AdminDeclareController extends BaseController {
	public static Log log = LogFactory.getLog(AdminDeclareController.class);

	@Autowired
	private AdminMediaCoverageService adminMediaCoverageService;
	
	@Autowired
	private AdminWebConsultService adminWebConsultService;
	
	@Autowired
	private AdmIninfoManageService adminInfoManageService;
	
	@Autowired
	private AdminFriendLinkService adminFriendLinkService;
	
	@Autowired
	private AdminBannerService adminBannerService;
	
	@Autowired
	private AdminActivityService adminActivityService;
	
	@Autowired
	private AdminOperateReportService adminOperateReportService;
	
	/**
	 * 分页显示媒体报道列表
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/mediaReportListinit")
	public String recommendInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminMediaCoverageService.queryMediaCoverageForPage(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 添加媒体报道初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addMediaCoverageInit")
	public String addMediaCoverageInit(Model model,String tabid){
		return adminMediaCoverageService.addMediaCoverageInit(model, tabid);
	}
	
	/**
	 * 添加媒体报道
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addMediareport")
	@ResponseBody
	public Map<String, Object> addMediareport(Model model, Mediareport mediareport,String tabid){
		return adminMediaCoverageService.addMediareport(mediareport, tabid);
	}
	
	/**
	 * 编辑媒体报道
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediareportByIdInit")
	public String updateMediareportByIdInit(Model model, Long id, String tabid) {
		return adminMediaCoverageService.updateMediareportByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改媒体报道
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediareportById")
	@ResponseBody
	public Map<String, Object> updateMediareportById(Model model, Mediareport mediareport,String tabid) {
		return adminMediaCoverageService.updateMediareportById(mediareport,tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadDataMediareport")
	@ResponseBody
	public Map<String, Object> uploadDataMediareport(MultipartFile file, String dialogId) {
		return adminMediaCoverageService.uploadDataMediareport(file, dialogId, request());
	}
	
	/**
	 * 设置是否置顶
	 * @param model
	 * @param stick
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediaStick")
	@ResponseBody
	public Map<String, Object> updateStickById(Model model, Integer stick,Long id) {
		return adminMediaCoverageService.updateStickById(stick,id);
	}
	
	/**
	 * 删除媒体报道
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteMediareportById")
	@ResponseBody
	public Map<String, Object> deleteMediareportById(Model model, Long id) {
		return adminMediaCoverageService.deleteMediareportById(id);
	}
	
	/**
	 * 批量删除媒体报道
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteMediaCoverageByIds")
	@ResponseBody
	public Map<String, Object> deleteMediaCoverageByIds(Model model, String delids) {
		return adminMediaCoverageService.deleteMediareportByIds(delids);
	}
	
	/**
	 * 预览媒体报道
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewMediaReportInit")
	public String preViewMediaReportInit(Model model, Long id, String tabid) {
		return adminMediaCoverageService.queryMediareportById(id, model,tabid);
	}
	
	/**
	 * 网站咨询分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryNewsListInit")
	public String queryNewsListInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminWebConsultService.queryNewsListInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 官方公告添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addNewsInit")
	public String addNewsInit(Model model,String tabid){
		return adminWebConsultService.addNewsInit(model, tabid);
	}
	
	/**
	 * 添加官方公告
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addNews")
	@ResponseBody
	public Map<String, Object> addNews(Model model, News news,String tabid){
		Admin admin = getSessionAdminInfo();
		return adminWebConsultService.addNews(news, tabid, admin.getId());
	}
	
	/**
	 * 删除官方公告
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteWebConsultById")
	@ResponseBody
	public Map<String, Object> deleteWebConsultById(Model model, Long id) {
		return adminWebConsultService.deleteWebConsultById(id);
	}
	
	/**
	 * 批量删除官方公告
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteWebConsultByIds")
	@ResponseBody
	public Map<String, Object> deleteWebConsultByIds(Model model, String delids) {
		return adminWebConsultService.deleteWebConsultByIds(delids);
	}
	
	/**
	 * 编辑官方公告
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateWebConsultByIdInit")
	public String updateWebConsultByIdInit(Model model, Long id, String tabid) {
		return adminWebConsultService.updateWebConsultByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改官方公告
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateWebConsultById")
	@ResponseBody
	public Map<String, Object> updateWebConsultById(Model model, News news,String tabid) {
		return adminWebConsultService.updateWebConsultById(news,tabid);
	}
	
	/**
	 * 预览官方公告
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewWebConsultInit")
	public String preViewWebConsultInit(Model model, Long id, String tabid) {
		return adminWebConsultService.preViewWebConsultInit(id, model,tabid);
	}
	
	/**
	 * 信息管理分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryMessageListInit")
	public String queryMessageListInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminInfoManageService.queryMessageListInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 编辑信息管理
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateInfoManageByIdInit")
	public String updateInfoManageByIdInit(Model model, Long id, String tabid) {
		return adminInfoManageService.updateInfoManageByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改信息管理
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateInfoManageById")
	@ResponseBody
	public Map<String, Object> updateInfoManageById(Model model, Message message,String tabid) {
		return adminInfoManageService.updateInfoManageById(message,tabid);
	}
	
	/**
	 * 预览信息管理
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewInfoManageInit")
	public String preViewInfoManageInit(Model model, Long id, String tabid) {
		return adminInfoManageService.preViewInfoManageInit(id, model,tabid);
	}
	
	/**
	 * 友情链接分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryLinksListPageInit")
	public String queryLinksListPageInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminFriendLinkService.queryLinksListPageInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 友情链接添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addLinksInit")
	public String addLinksInit(Model model,String tabid){
		return adminFriendLinkService.addLinksInit(model, tabid);
	}
	
	/**
	 * 添加友情链接
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addLinks")
	@ResponseBody
	public Map<String, Object> addLinks(Model model, Links links,String tabid){
		return adminFriendLinkService.addLinks(links, tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadLinks")
	@ResponseBody
	public Map<String, Object> uploadLinks(MultipartFile file, String dialogId) {
		return adminFriendLinkService.uploadLinks(file, dialogId, request());
	}
	
	/**
	 * 删除友情链接
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteLinksById")
	@ResponseBody
	public Map<String, Object> deleteLinksById(Model model, Long id) {
		return adminFriendLinkService.deleteLinksById(id);
	}
	
	/**
	 * 批量删除友情链接
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteLinksByIds")
	@ResponseBody
	public Map<String, Object> deleteLinksByIds(Model model, String delids) {
		return adminFriendLinkService.deleteLinksByIds(delids);
	}
	
	/**
	 * 编辑友情链接
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateLinksByIdInit")
	public String updateLinksByIdInit(Model model, Long id, String tabid) {
		return adminFriendLinkService.updateLinksByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改友情链接
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateLinksById")
	@ResponseBody
	public Map<String, Object> updateLinksById(Model model, Links links,String tabid) {
		return adminFriendLinkService.updateLinksById(links,tabid);
	}
	
	/**
	 * Banner分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/toBanner")
	public String queryBannerListPageInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminBannerService.queryBannerListPageInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 修改Banner排序
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateSortByid")
	@ResponseBody
	public Map<String, Object> updateSortByid(String tabid) {
		String bannerId = request().getParameter("bannerId");
		String sort = request().getParameter("sort");
		return adminBannerService.updateSortByid(bannerId,sort,tabid);
	}
	
	/**
	 * 编辑Banner
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateBannerByIdInit")
	public String updateBannerByIdInit(Model model, Long id, String tabid) {
		return adminBannerService.updateBannerByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改信息管理
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateBannerById")
	@ResponseBody
	public Map<String, Object> updateBannerById(Model model, Banner banner,String tabid,int type) {
		return adminBannerService.updateBannerById(banner,tabid);
	}
	
	/**
	 * 删除Banner
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteBannerById")
	@ResponseBody
	public Map<String, Object> deleteBannerById(Model model, Long id) {
		return adminBannerService.deleteBannerById(id);
	}
	
	/**
	 * Banner添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addBannerInit")
	public String addBannerInit(Model model,String tabid){
		return adminBannerService.addBannerInit(model, tabid);
	}
	
	/**
	 * 添加Banner
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addBanner")
	@ResponseBody
	public Map<String, Object> addBanner(Model model, Banner banner,String tabid){
		return adminBannerService.addBanner(banner, tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadBanner")
	@ResponseBody
	public Map<String, Object> uploadBanner(MultipartFile file, String dialogId) {
		return adminBannerService.uploadBanner(file, dialogId, request());
	}
	
	/**
	 * 活动管理分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/activityInit")
	public String activityInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminActivityService.queryActivityListPageInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 活动添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addActivityInit")
	public String addActivityInit(Model model,String tabid){
		return adminActivityService.addActivityInit(model, tabid);
	}
	
	/**
	 * 添加活动
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addActivity")
	@ResponseBody
	public Map<String, Object> addActivity(Model model, Activity activity,String tabid){
		return adminActivityService.addActivity(activity, tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadActivity")
	@ResponseBody
	public Map<String, Object> uploadActivity(MultipartFile file, String dialogId) {
		return adminActivityService.uploadActivity(file, dialogId, request());
	}
	
	/**
	 * 删除活动
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteActivityById")
	@ResponseBody
	public Map<String, Object> deleteActivityById(Model model, Long id) {
		return adminActivityService.deleteActivityById(id);
	}
	
	/**
	 * 批量删活动
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteActivityByIds")
	@ResponseBody
	public Map<String, Object> deleteActivityByIds(Model model, String delids) {
		return adminActivityService.deleteActivityByIds(delids);
	}
	
	/**
	 * 编辑活动
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateActivityByIdInit")
	public String updateActivityByIdInit(Model model, Long id, String tabid) {
		return adminActivityService.updateActivityByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改活动管理
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateActivityById")
	@ResponseBody
	public Map<String, Object> updateActivityById(Model model, Activity activity,String tabid) {
		return adminActivityService.updateActivityById(activity,tabid);
	}
	
	/**
	 * 运营报告分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/yybgInit")
	public String OperateReportInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminOperateReportService.queryOperateReportListPageInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 运营报告添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addYybgInit")
	public String addYybgInit(Model model,String tabid){
		return adminOperateReportService.addYybgInit(model, tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadYybg")
	@ResponseBody
	public Map<String, Object> uploadYybg(MultipartFile file, String dialogId) {
		return adminOperateReportService.uploadYybg(file, dialogId, request());
	}
	
	/**
	 * 添加运营报告
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addYybg")
	@ResponseBody
	public Map<String, Object> addYybg(Model model, Yybg yybg,String tabid){
		return adminOperateReportService.addYybg(yybg, tabid, getSessionAdminInfo().getUserName());
	}
	
	/**
	 * 上传文件
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadYybgFile")
	@ResponseBody
	public Map<String, Object> uploadYybgFile(MultipartFile file, String dialogId,String tabid,int id,int type) {
		return adminOperateReportService.uploadYybgFile(file, dialogId, request(),tabid,id,type);
	}
	
	/**
	 * 删除运营报告
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteYybgById")
	@ResponseBody
	public Map<String, Object> deleteYybgById(Model model, Long id) {
		return adminOperateReportService.deleteYybgById(id);
	}
}
