<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.pjzb.dao.RepaymentDao">

	<resultMap type="repayment" id="repaymentResultMap">
		<id column="id" property="id" />
		<result column="repayDate" property="repayDate" />
		<result column="realRepayDate" property="realRepayDate" />
		<result column="repayPeriod" property="repayPeriod" />
		<result column="hasPI" property="hasPi" />
		<result column="stillPrincipal" property="stillPrincipal" />
		<result column="stillInterest" property="stillInterest" />
		<result column="hasFI" property="hasFi" />
		<result column="lateFI" property="lateFi" />
		<result column="lateDay" property="lateDay" />
		<result column="repayStatus" property="repayStatus" />
		<result column="borrowId" property="borrowId" />
		<result column="isLate" property="isLate" />
		<result column="isWebRepay" property="isWebRepay" />
		<result column="investorForpayFI" property="investorForpayFi" />
		<result column="investorHaspayFI" property="investorHaspayFi" />
		<result column="principalBalance" property="principalBalance" />
		<result column="interestBalance" property="interestBalance" />
		<result column="version" property="version" />
		<result column="executeTime" property="executeTime" />
		<result column="identify" property="identify" />
	</resultMap>


	<select id="queryWillBorrowerRepaymentInfo" resultMap="repaymentResultMap">
		select *
		from t_repayment where datediff(#{date},repayDate) =0 and repayStatus
		= 1
	</select>


	<select id="queryPaymentInfo" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select c.ipayAccount as ipayAccount, c.id as userId,
		c.username as username, c.dealpwd as pwd,
		b.borrowWay,isDayThe,b.nid_log
		from t_repayment a left join t_borrow b
		on a.borrowId=b.id left join
		t_user c on c.id=b.publisher where a.id
		=#{id}
	</select>


	<select id="callBorrowRepaymentinitProcedure" statementType="CALLABLE"
		resultType="java.util.Map" parameterType="java.util.Map">
		{CALL p_borrow_repaymentinit(
		#{in_bid,jdbcType=BIGINT,mode=IN},
		#{out_ret,jdbcType=INTEGER,mode=OUT},
		#{out
		out_desc,jdbcType=VARCHAR,mode=OUT}
		)
		}
	</select>



	<select id="queryAllInvestInfo" resultType="java.util.Map"
		parameterType="java.lang.Long">
		SELECT * FROM v_t_chianpnr_repay a WHERE
		a.payId=#{payId}
	</select>


	<select id="queryRepayInfoByBorrowId" resultType="java.util.Map"
		parameterType="java.lang.Long">
		select a.id,a.investor
		userId,((a.realAmount/c.borrowAmount)*b.stillPrincipal) principal from
		t_invest a left join
		t_repayment b on a.borrowId = b.borrowId left join
		t_borrow c on a.borrowId =
		c.id where b.id =#{borrowId}
	</select>

	<select id="queryRepaymentBorrowIdIdById" resultType="java.lang.Long"
		parameterType="java.lang.Long">
		SELECT a.borrowId AS borrowId FROM t_repayment a WHERE
		a.id=#{id}
	</select>

	<select id="queryOverDueRepayment" resultType="map"
		parameterType="string">
		<![CDATA[
			SELECT id, repayDate, stillPrincipal, stillInterest
			, executeTime, borrowId, DATEDIFF(#{0}, executeTime) executeDay
			, DATEDIFF(#{0},repayDate) overdueDay FROM t_repayment WHERE
			DATE_FORMAT(repayDate,'%Y-%m-%d') < #{0} AND repayStatus = 1
		]]>
	</select>

	<update id="updateOverDueRepayment">
		UPDATE t_repayment SET isLate = 2, lateDay = #{2},
		lateFI = #{1}, executeTime = #{3} WHERE id = #{0}
	</update>

	<insert id="addPreRepament">
		insert into t_pre_repayment (
			borrowId, identify, repayPeriod, stillPrincipal,
			stillInterest, principalBalance, interestBalance, totalSum,
			totalAmount, mRate, repayDate, sort
		)
		values(
			#{borrowId}, #{identify}, #{repayPeriod}, #{stillPrincipal}, 
			#{stillInterest},#{principalBalance},#{interestBalance}, #{totalSum},
			#{totalAmount}, #{mrate},#{repayDate}, #{sort}
		)		
	</insert>
	
	<select id="queryrRepay" resultType="java.util.Map" parameterType="java.lang.Long">
		select * from t_repayment t where id = (select max(t.id) from t_repayment t where t.borrowId=#{id})
	</select>
	
	<select id="queryAllInvestInfoByRepaymentId" resultType="java.util.Map" parameterType="java.lang.Long">
		SELECT * FROM v_t_chianpnr_repay WHERE ordId = #{0}
	</select>
	
	<select id="queryUserCashListCount" resultType="long">
		SELECT COUNT(*) count FROM 
		(SELECT a.id AS userId,a.username,IFNULL(f.forRePaySum,0) AS
		dueoutSum,a.usableSum,a.freezeSum,
		ROUND(SUM(IFNULL(b.recivedPrincipal+b.recievedInterest-b.hasPrincipal-b.hasInterest,0)),2)
		AS dueinSum,d.realName realName FROM t_user a LEFT JOIN t_invest b ON
		a.id = b.investor
		LEFT JOIN t_person d ON d.userId=a.id LEFT JOIN
		(SELECT forRePaySum,publisher FROM (SELECT
		SUM(IFNULL((c.stillPrincipal+c.stillInterest-c.hasPI+c.lateFI-c.hasFI),0))
		AS forRePaySum,d.publisher FROM t_repayment c LEFT JOIN t_borrow d ON
		c.borrowId = d.id where c.repayStatus = 1 GROUP BY d.publisher) t) f
		ON f.publisher = a.id GROUP BY
		a.ID,a.usableSum,a.freezeSum,f.forRePaySum,d.realName,a.username) u
		WHERE 1=1
		<if test="param3 != null and param3 != ''">AND username LIKE "%"#{2}"%"</if>
		<if test="param4 != null and param4 != ''">AND realName LIKE "%"#{3}"%"</if>
		<if test="param5 != null and param5 > -1">AND usableSum >= #{4}</if>
		<if test="param6 != null and param6 > -1"><![CDATA[ AND usableSum <= #{5} ]]></if>
	</select>
	
	<select id="queryUserCashList" resultType="map">
		SELECT * FROM 
		(SELECT a.id AS userId,a.username,IFNULL(f.forRePaySum,0) AS
		dueoutSum,a.usableSum,a.freezeSum,
		ROUND(SUM(IFNULL(b.recivedPrincipal+b.recievedInterest-b.hasPrincipal-b.hasInterest,0)),2)
		AS dueinSum,d.realName realName FROM t_user a LEFT JOIN t_invest b ON
		a.id = b.investor
		LEFT JOIN t_person d ON d.userId=a.id LEFT JOIN
		(SELECT forRePaySum,publisher FROM (SELECT
		SUM(IFNULL((c.stillPrincipal+c.stillInterest-c.hasPI+c.lateFI-c.hasFI),0))
		AS forRePaySum,d.publisher FROM t_repayment c LEFT JOIN t_borrow d ON
		c.borrowId = d.id where c.repayStatus = 1 GROUP BY d.publisher) t) f
		ON f.publisher = a.id GROUP BY
		a.ID,a.usableSum,a.freezeSum,f.forRePaySum,d.realName,a.username) u
		WHERE 1=1
		<if test="param3 != null and param3 != ''">AND username LIKE "%"#{2}"%"</if>
		<if test="param4 != null and param4 != ''">AND realName LIKE "%"#{3}"%"</if>
		<if test="param5 != null and param5 > -1">AND usableSum >= #{4}</if>
		<if test="param6 != null and param6 > -1"><![CDATA[ AND usableSum <= #{5} ]]></if>
		LIMIT #{0}, #{1}
	</select>
	
	<select id="queryUserCash" resultType="map">
		SELECT sum(u.dueoutSum) AS dueoutSums, SUM(u.usableSum) AS usableSums,
		sum(u.freezeSum) AS freezeSums, SUM(u.dueinSum) AS dueinSums FROM
		(SELECT a.id AS userId,a.username,IFNULL(f.forRePaySum,0) AS
		dueoutSum,a.usableSum,a.freezeSum,
		ROUND(SUM(IFNULL(b.recivedPrincipal+b.recievedInterest-b.hasPrincipal-b.hasInterest,0)),2)
		AS dueinSum,d.realName realName FROM t_user a LEFT JOIN t_invest b ON
		a.id = b.investor
		LEFT JOIN t_person d ON d.userId=a.id LEFT JOIN
		(SELECT forRePaySum,publisher FROM (SELECT
		SUM(IFNULL((c.stillPrincipal+c.stillInterest-c.hasPI+c.lateFI-c.hasFI),0))
		AS forRePaySum,d.publisher FROM t_repayment c LEFT JOIN t_borrow d ON
		c.borrowId = d.id where c.repayStatus = 1 GROUP BY d.publisher) t) f
		ON f.publisher = a.id GROUP BY
		a.ID,a.usableSum,a.freezeSum,f.forRePaySum,d.realName,a.username) u
		WHERE 1=1
		<if test="param3 != null and param3 != ''">AND username LIKE "%"#{2}"%"</if>
		<if test="param4 != null and param4 != ''">AND realName LIKE "%"#{3}"%"</if>
		<if test="param5 != null and param5 > -1">AND usableSum >= #{4}</if>
		<if test="param6 != null and param6 > -1"><![CDATA[ AND usableSum <= #{5} ]]></if>
	</select>

	<select id="queryUserFundRechargeInfoCount" resultType="long">
		SELECT COUNT(*) FROM v_t_user_rechargeall_lists WHERE 1 = 1
		<if test="param1 != null and param1 != ''">AND rechargeTime >= #{0}</if>
		<if test="param2 != null and param2 != ''"><![CDATA[ AND rechargeTime <= #{1} ]]></if>
		<if test="param3 != null and param3 != '' and param3 > 0">AND type = #{2}</if>
		<if test="param4 != null and param4 != '' and param4 >= 0">AND result = #{3}</if>
		<if test="param5 > 0">AND userId = #{4}</if>
	</select>
	
	<select id="queryUserFundRechargeInfo" resultType="map">
		SELECT * FROM v_t_user_rechargeall_lists WHERE 1 = 1
		<if test="param1 != null and param1 != ''">AND rechargeTime >= #{0}</if>
		<if test="param2 != null and param2 != ''"><![CDATA[ AND rechargeTime <= #{1} ]]></if>
		<if test="param3 != null and param3 != '' and param3 > 0">AND type = #{2}</if>
		<if test="param4 != null and param4 != '' and param4 >= 0">AND result = #{3}</if>
		<if test="param5 > 0">AND userId = #{4}</if>
		LIMIT #{5}, #{6}
	</select>
	
	<select id="queryUserFundRechargeInfoExport" resultType="map" parameterType="long">
		select username, rechargeMoney, poundage, realMoney, DATE_FORMAT(rechargeTime,'%y-%m-%d %H:%I:%S') rechargeTime, (
			select
				CASE 
					when result=0 then '失败'
					when result=1 then '成功'
					when result=2 then '审核中'
				END 
			from v_t_user_rechargeall_lists where id = t.id
		) result , (
			select
				CASE 
					when type=1 then '支付宝支付'
					when type=2 then '环迅支付'
					when type=3 then '国付宝'
					when type=4 then '线下充值'
					when type=5 then '手工充值'
					when type=6 then '虚拟充值'
					when type=7 then '奖励充值'
				END 
			from v_t_user_rechargeall_lists where id = t.id
		) type from v_t_user_rechargeall_lists t where 1 = 1
		<if test="userId > 0">AND userId = #{userId}</if>
	</select>

	

</mapper>







