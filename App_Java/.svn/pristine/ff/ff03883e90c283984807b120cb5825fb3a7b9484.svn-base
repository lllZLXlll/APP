package com.pjzb.controller.admin;

import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.pjzb.controller.common.BaseController;
import com.pjzb.entity.Admin;
import com.pjzb.entity.Mediareport;
import com.pjzb.entity.Message;
import com.pjzb.entity.News;
import com.pjzb.service.admin.declare.AdmIninfoManageService;
import com.pjzb.service.admin.declare.AdminMediaCoverageService;
import com.pjzb.service.admin.declare.AdminWebConsultService;

/**
 * 宣传管理Controller
 * 
 * 
 */
@Controller
@RequestMapping(value = "/admin")
public class AdminDeclareController extends BaseController {
	public static Log log = LogFactory.getLog(AdminDeclareController.class);

	@Autowired
	private AdminMediaCoverageService adminMediaCoverageService;
	
	@Autowired
	private AdminWebConsultService adminWebConsultService;
	
	@Autowired
	private AdmIninfoManageService adminInfoManageService;
	
	/**
	 * 分页显示媒体报道列表
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/mediaReportListinit")
	public String recommendInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminMediaCoverageService.queryMediaCoverageForPage(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 添加媒体报道初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addMediaCoverageInit")
	public String addMediaCoverageInit(Model model,String tabid){
		return adminMediaCoverageService.addMediaCoverageInit(model, tabid);
	}
	
	/**
	 * 添加媒体报道
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addMediareport")
	@ResponseBody
	public Map<String, Object> addMediareport(Model model, Mediareport mediareport,String tabid){
		return adminMediaCoverageService.addMediareport(mediareport, tabid);
	}
	
	/**
	 * 编辑媒体报道
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediareportByIdInit")
	public String updateMediareportByIdInit(Model model, Long id, String tabid) {
		return adminMediaCoverageService.updateMediareportByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改媒体报道
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediareportById")
	@ResponseBody
	public Map<String, Object> updateMediareportById(Model model, Mediareport mediareport,String tabid) {
		return adminMediaCoverageService.updateMediareportById(mediareport,tabid);
	}
	
	/**
	 * 上传图片
	 * @param file
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/uploadDataMediareport")
	@ResponseBody
	public Map<String, Object> uploadDataMediareport(MultipartFile file, String dialogId) {
		return adminMediaCoverageService.uploadDataMediareport(file, dialogId, request());
	}
	
	/**
	 * 设置是否置顶
	 * @param model
	 * @param stick
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateMediaStick")
	@ResponseBody
	public Map<String, Object> updateStickById(Model model, Integer stick,Long id) {
		return adminMediaCoverageService.updateStickById(stick,id);
	}
	
	/**
	 * 删除媒体报道
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteMediareportById")
	@ResponseBody
	public Map<String, Object> deleteMediareportById(Model model, Long id) {
		return adminMediaCoverageService.deleteMediareportById(id);
	}
	
	/**
	 * 批量删除媒体报道
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteMediaCoverageByIds")
	@ResponseBody
	public Map<String, Object> deleteMediaCoverageByIds(Model model, String delids) {
		return adminMediaCoverageService.deleteMediareportByIds(delids);
	}
	
	/**
	 * 预览媒体报道
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewMediaReportInit")
	public String preViewMediaReportInit(Model model, Long id, String tabid) {
		return adminMediaCoverageService.queryMediareportById(id, model,tabid);
	}
	
	/**
	 * 网站咨询分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryNewsListInit")
	public String queryNewsListInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminWebConsultService.queryNewsListInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 官方公告添加初始化
	 * @param model
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addNewsInit")
	public String addNewsInit(Model model,String tabid){
		return adminWebConsultService.addNewsInit(model, tabid);
	}
	
	/**
	 * 添加官方公告
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/addNews")
	@ResponseBody
	public Map<String, Object> addNews(Model model, News news,String tabid){
		Admin admin = getSessionAdminInfo();
		return adminWebConsultService.addNews(news, tabid, admin.getId());
	}
	
	/**
	 * 删除官方公告
	 * @param model
	 * @param id
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteWebConsultById")
	@ResponseBody
	public Map<String, Object> deleteWebConsultById(Model model, Long id) {
		return adminWebConsultService.deleteWebConsultById(id);
	}
	
	/**
	 * 批量删除官方公告
	 * @param model
	 * @param delids
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/deleteWebConsultByIds")
	@ResponseBody
	public Map<String, Object> deleteWebConsultByIds(Model model, String delids) {
		return adminWebConsultService.deleteWebConsultByIds(delids);
	}
	
	/**
	 * 编辑官方公告
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateWebConsultByIdInit")
	public String updateWebConsultByIdInit(Model model, Long id, String tabid) {
		return adminWebConsultService.updateWebConsultByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改官方公告
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateWebConsultById")
	@ResponseBody
	public Map<String, Object> updateWebConsultById(Model model, News news,String tabid) {
		return adminWebConsultService.updateWebConsultById(news,tabid);
	}
	
	/**
	 * 预览官方公告
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewWebConsultInit")
	public String preViewWebConsultInit(Model model, Long id, String tabid) {
		return adminWebConsultService.preViewWebConsultInit(id, model,tabid);
	}
	
	/**
	 * 信息管理分页
	 * @param model
	 * @param pageCurrent
	 * @param pageSize
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/queryMessageListInit")
	public String queryMessageListInit(Model model, Long pageCurrent, Long pageSize,String tabid) {
		return adminInfoManageService.queryMessageListInit(pageCurrent, pageSize, model,tabid);
	}
	
	/**
	 * 编辑信息管理
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateInfoManageByIdInit")
	public String updateInfoManageByIdInit(Model model, Long id, String tabid) {
		return adminInfoManageService.updateInfoManageByIdInit(id, model,tabid);
	}
	
	/**
	 * 修改信息管理
	 * @param model
	 * @param mediareport
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/updateInfoManageById")
	@ResponseBody
	public Map<String, Object> updateInfoManageById(Model model, Message message,String tabid) {
		return adminInfoManageService.updateInfoManageById(message,tabid);
	}
	
	/**
	 * 预览信息管理
	 * @param model
	 * @param id
	 * @param tabid
	 * @return
	 * @author Li zeyang
	 */
	@RequestMapping(value = "/preViewInfoManageInit")
	public String preViewInfoManageInit(Model model, Long id, String tabid) {
		return adminInfoManageService.preViewInfoManageInit(id, model,tabid);
	}
}
